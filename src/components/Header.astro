---
interface Props {
  logo: string;
}

const { logo } = Astro.props;
---

<header>
  <nav>
    <a href="/"><img loading="lazy" src={logo} alt="Logo" class="logo" /></a>
    <ul class="nav-links">
      <li>
        <a href="https://github.com/franeguerrero" target="_blank">GitHub</a>
      </li>
      <li>
        <a href="https://www.linkedin.com/in/franeguerrero/" target="_blank"
          >LinkedIn</a
        >
      </li>
      <li>
        <a
          href="mailto:franeguerrero@gmail.com"
          target="_blank"
          class="action-btn">Ponete en contacto</a
        >
      </li>
    </ul>

    <label class="hamburger">
      <input type="checkbox" />
      <svg viewBox="0 0 32 32">
        <path
          class="line line-top-bottom"
          d="M27 10 13 10C10.8 10 9 8.2 9 6 9 3.5 10.8 2 13 2 15.2 2 17 3.8 17 6L17 26C17 28.2 18.8 30 21 30 23.2 30 25 28.2 25 26 25 23.8 23.2 22 21 22L7 22"
        ></path>
        <path class="line" d="M7 16 27 16"></path>
      </svg>
    </label>
  </nav>

  <ul class="dropdown-menu">
    <li>
      <a href="https://github.com/franeguerrero" target="_blank">GitHub</a>
    </li>
    <li>
      <a href="https://www.linkedin.com/in/franeguerrero/" target="_blank"
        >LinkedIn</a
      >
    </li>
    <li>
      <a
        href="mailto:franeguerrero@gmail.com"
        target="_blank"
        class="action-btn">Ponete en contacto</a
      >
    </li>
  </ul>
</header>

<script>
  const checkbox = document.querySelector(".hamburger input");
  const dropdownMenu = document.querySelector(".dropdown-menu");

  if (checkbox instanceof HTMLInputElement && dropdownMenu) {
    checkbox.addEventListener("change", () => {
      if (checkbox.checked) {
        dropdownMenu.classList.add("open");
      } else {
        dropdownMenu.classList.remove("open");
      }
    });
  }
</script>

<style>
  header {
    background-color: var(--background);
    position: fixed;
    top: 0;
    left: 0;
    right: 0;
    display: flex;
    align-items: center;
    justify-content: center;
    z-index: 999;
  }

  nav {
    display: flex;
    flex-direction: row;
    padding: 0.5rem 1rem;
    width: 100%;
    max-width: 75rem;
    align-items: center;
    justify-content: space-between;
  }

  .nav-links {
    display: flex;
    flex-direction: row;
    list-style: none;
    padding: 0;
    margin: 0;
    gap: 3rem;
  }
  .nav-links a,
  .dropdown-menu {
    text-decoration: none;
    color: var(--black);
  }
  .nav-links a:hover {
    color: var(--primary-highlight);
  }

  .logo {
    height: 3rem;
  }

  .nav-links .action-btn,
  .dropdown-menu .action-btn {
    text-decoration: none;
    background-color: var(--primary);
    color: var(--background);
    padding: 0.5rem 2rem;
    border: none;
    outline: none;
    border-radius: 0.5rem;
    text-transform: uppercase;
    transition: 0.2s ease-in-out;
  }

  .nav-links .action-btn:hover {
    color: var(--background);
    background-color: var(--primary-highlight);
  }

  .hamburger {
    cursor: pointer;
    display: none;
  }

  .hamburger input {
    display: none;
  }

  .hamburger svg {
    height: 3em;
    transition: transform 300ms cubic-bezier(0.4, 0, 0.2, 1);
  }

  .line {
    fill: none;
    stroke: var(--primary);
    stroke-linecap: round;
    stroke-linejoin: round;
    stroke-width: 3;
    transition:
      stroke-dasharray 300ms cubic-bezier(0.4, 0, 0.2, 1),
      stroke-dashoffset 300ms cubic-bezier(0.4, 0, 0.2, 1);
  }

  .line-top-bottom {
    stroke-dasharray: 12 63;
  }

  .hamburger input:checked + svg {
    transform: rotate(-45deg);
  }

  .hamburger input:checked + svg .line-top-bottom {
    stroke-dasharray: 20 300;
    stroke-dashoffset: -32.42;
  }

  .dropdown-menu {
    position: absolute;
    display: none;
    flex-direction: column;
    align-items: center;
    top: -15rem;
    left: 0;
    right: 0;
    width: 100%;
    background-color: var(--background);
    list-style: none;
    padding: 1rem;
    margin: 0;
    gap: 1.5rem;
    z-index: -1;
    transition: 300ms ease-in-out;
  }

  .dropdown-menu.open {
    top: 4rem;
  }

  .dropdown-menu a {
    text-decoration: none;
    color: var(--black);
  }

  @media (max-width: 50rem) {
    .hamburger {
      display: block;
    }

    .nav-links {
      display: none;
    }
    .dropdown-menu {
      display: flex;
    }
  }
</style>
